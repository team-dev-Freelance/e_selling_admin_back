name: Deploy Selling Back

on: [push]

env:
  IMAGE: my-django-app
  VERSION: 0.0.1

jobs:
  create-folder:
    name: Create Deployment Folder
    runs-on: ubuntu-latest
    steps:
      - name: Create Folder on Server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 2222
          script: |
            mkdir -p /opt/applications/e_selling_admin_back/${{env.IMAGE}}
            ls -al /opt/applications/e_selling_admin_back/

  generate-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: create-folder
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          docker build -t koire0312/${{env.IMAGE}}:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to Docker Hub
        run: |
          docker push koire0312/${{env.IMAGE}}:latest

  run-container:
    name: Deploy Container on Server
    runs-on: ubuntu-latest
    needs: generate-image
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Copy Compose File to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 2222
          source: "compose.yml"
          target: /opt/applications/e_selling_admin_back/${{env.IMAGE}}/

      - name: Deploy Application
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 2222
          script: |
            cat <<EOF > /opt/applications/e_selling_admin_back/${{env.IMAGE}}/.env
            DEBUG=False
            SECRET_KEY=${SECRET_KEY}
            DB_HOST: ${DB_HOST}
            DB_PORT: ${DB_PORT}
            DB_NAME: ${DB_NAME}
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
            EOF

            cd /opt/applications/e_selling_admin_back/${{env.IMAGE}}

            # Arrêter et supprimer les anciens conteneurs
            docker-compose down

            # Nettoyer les images Docker obsolètes
            docker image prune -f

            # Lancer les nouveaux conteneurs
            docker-compose up -d --build
