#name: deploy selling Back
#on: [push]
#env:
#  IMAGE: my-django-app
#  VERSION: 0.0.1
#jobs:
#  create-folder:
#    name: create-folder
#    runs-on: ubuntu-latest
#    steps:
#      - name: execute commands
#        uses: appleboy/ssh-action@v1.2.0
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          key: ${{ secrets.PRIVATE_KEY }}
#          port: 2222
#          script: |
#            mkdir -p /opt/applications/e_selling_admin_back/${{env.IMAGE}}/
#            ls -al /opt/applications/e_selling_admin_back/
#
#  generate-image:
#    name: generate-image
#    runs-on: ubuntu-latest
#    needs: create-folder
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up Python version
#        uses: actions/setup-python@v2
#        with:
#          python-version: '3.10'
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#        with:
#          version: latest
#
#      - name: Cache Docker layers
#        uses: actions/cache@v2
#        with:
#          path: ~/.docker/buildx-cache
#          key: ${{ runner.os }}-buildx-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-buildx-
#
#      - name: Build Docker image
#        run: |
#          docker build -t my-django-app:latest .
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Push Docker image
#        run: |
#          docker tag my-django-app:latest koire0312/my-django-app:latest
#          docker push koire0312/my-django-app:latest
#
#
#  run-container:
#    name: run-container
#    runs-on: ubuntu-latest
#    needs: ['create-folder', 'generate-image']
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: copy file via ssh key
#        uses: appleboy/scp-action@v0.1.7
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          key: ${{ secrets.PRIVATE_KEY }}
#          port: 2222
#          source: "compose.yml"
#          target: /opt/applications/e_selling_admin_back/${{env.IMAGE}}/
#      - name: execute commands to run container
#        uses: appleboy/ssh-action@v1.2.0
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          key: ${{ secrets.PRIVATE_KEY }}
#          port: 2222
#          script: |
#            cat <<EOF > /opt/applications/e_selling_admin_back/${{env.IMAGE}}/.env
#            SECRET_KEY=${{ secrets.SECRET_KEY }}
#            DB_HOST=${{ secrets.DB_HOST }}
#            DB_PORT=3307
#            DB_NAME=${{ secrets.DB_NAME }}
#            DB_USERNAME=${{ secrets.DB_USERNAME }}
#            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
#            EOF
#
#            docker compose -f /opt/applications/e_selling_admin_back/${{env.IMAGE}}/compose.yml up -d
#

name: Deploy Selling Back

on: [push]

env:
  IMAGE: my-django-app
  VERSION: 0.0.1

jobs:
  create-folder:
    name: Create Deployment Folder
    runs-on: ubuntu-latest
    steps:
      - name: Create Folder on Server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 2222
          script: |
            mkdir -p /opt/applications/e_selling_admin_back/${{env.IMAGE}}
            ls -al /opt/applications/e_selling_admin_back/

  generate-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: create-folder
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          docker build -t koire0312/${{env.IMAGE}}:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to Docker Hub
        run: |
          docker push koire0312/${{env.IMAGE}}:latest

  run-container:
    name: Deploy Container on Server
    runs-on: ubuntu-latest
    needs: generate-image
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Copy Compose File to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 2222
          source: "compose.yml"
          target: /opt/applications/e_selling_admin_back/${{env.IMAGE}}/

      - name: Deploy Application
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 2222
          script: |
            cat <<EOF > /opt/applications/e_selling_admin_back/${{env.IMAGE}}/.env
            DEBUG=False
            SECRET_KEY=django-insecure-^k#(#tk5!gslwc=aj6x=vubs5n%m-+)u(+$gn*texj50p8aiv8
            DB_HOST=102.220.19.164
            DB_PORT=3307
            DB_NAME=selling_db
            DB_USERNAME=root
            DB_PASSWORD=koire
            EOF

            cd /opt/applications/e_selling_admin_back/${{env.IMAGE}}

            # Arrêter et supprimer les anciens conteneurs
            docker-compose down

            # Nettoyer les images Docker obsolètes
            docker image prune -f

            # Lancer les nouveaux conteneurs
            docker-compose up -d --build
